type Taller @model {
  id: ID!
  name: String!
  direccion: String
  logo: String
  tecnico:[Tecnico] @connection(keyName: "byTaller", fields: ["id"])
  clientes: [Cliente]
  ofertasTrabajo: [OfertasTrabajo] @connection(keyName: "byTaller", fields: ["id"])
}

type Piezas @model{
  id: ID!
  nombre: String
  precio: Int
  cantidad: Int
}
type Tecnico @model @key(name: "byTaller", fields: ["tallerID"]){  
  id: ID!
  name: String!
  cargo: String
  tallerID: ID!
  taller: Taller @connection(fields: ["tallerID"])
  ordenServicio: [OrdenServicio] @connection(keyName: "byCliente", fields: ["id"])
  }
type Equipo @model @key(name: "byCliente", fields: ["clienteID"]){
  id: ID!
  nombre: String!
  descripcion: String
  clienteID: ID!
  cliente: Cliente @connection(fields: ["clienteID"])
}
type Cliente @model{
  id: ID!
  name: String!
  numeroTelefono: AWSPhone
  correo: AWSEmail
  ordenServicio: [OrdenServicio] @connection(keyName: "byCliente", fields: ["id"])
  equipo: [Equipo] @connection(keyName: "byCliente", fields: ["id"])
}
type OrdenServicio @model @key(name: "byCliente", fields: ["clienteID"]){
  id: ID!
  numero:Int
  estado: String!
  tecnicoID: ID!
  tecnico: Tecnico @connection(fields: ["tecnicoID"])
  clienteID: ID!
  cliente: Cliente @connection(fields: ["clienteID"])
  fechaDeFinalizado: AWSDateTime
  equipoID: ID!
  equipo: Equipo @connection(fields: ["equipoID"])
  piezas:[Piezas]
}

type OfertasTrabajo @model @key(name: "byTaller", fields: ["tallerID"]){
  id: ID!
  tallerID: ID!
  taller: Taller @connection(fields: ["tallerID"])
  titulo:String!
  contenido:String!
  fecha:AWSDateTime
}

type Blog @model{
  id: ID!
  name: String!
  posts: [Post] @connection(keyName: "byBlog", fields: ["id"])
}

type Post @model @key(name: "byBlog", fields: ["blogID"]) {
  id: ID!
  title: String!
  content: String!
  blogID: ID!
  blog: Blog @connection(fields: ["blogID"])
  answer: [Answer] @connection(keyName: "byPost", fields: ["id"])
  username:String!
}
type Answer @model @key(name: "byPost", fields: ["postID", "content"]) {
  id: ID!
  content: String!
  username:String!
  postID: ID!
  post: Post @connection(fields: ["postID"])
  comments: [Comment] 
}
type Comment @model {
  id: ID!
  answerID: ID!
  answer: Answer @connection(fields: ["answerID"])
  content: String!
  username:String!
}
# type Task
#   @model
#   @auth(
#     rules: [
#       { allow: groups, groups: ["Managers"], queries: null, mutations: [create, update, delete] }
#       { allow: groups, groups: ["Employees"], queries: [get, list], mutations: null }
#     ]
#   ) {
#   id: ID!
#   title: String!
#   description: String
#   status: String
# }
# type PrivateNote @model @auth(rules: [{ allow: owner }]) {
#   id: ID!
#   content: String!
# }